# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: TraceSegmentService.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import Downstream_pb2 as Downstream__pb2
import KeyWithStringValue_pb2 as KeyWithStringValue__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='TraceSegmentService.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x19TraceSegmentService.proto\x1a\x10\x44ownstream.proto\x1a\x18KeyWithStringValue.proto\"E\n\x0fUpstreamSegment\x12!\n\x0eglobalTraceIds\x18\x01 \x03(\x0b\x32\t.UniqueId\x12\x0f\n\x07segment\x18\x02 \x01(\x0c\"\x1b\n\x08UniqueId\x12\x0f\n\x07idParts\x18\x01 \x03(\x03\"\xaf\x01\n\x12TraceSegmentObject\x12!\n\x0etraceSegmentId\x18\x01 \x01(\x0b\x32\t.UniqueId\x12$\n\x04refs\x18\x02 \x03(\x0b\x32\x16.TraceSegmentReference\x12\x1a\n\x05spans\x18\x03 \x03(\x0b\x32\x0b.SpanObject\x12\x15\n\rapplicationId\x18\x04 \x01(\x05\x12\x1d\n\x15\x61pplicationInstanceId\x18\x05 \x01(\x05\"\xd2\x02\n\x15TraceSegmentReference\x12\x19\n\x07refType\x18\x01 \x01(\x0e\x32\x08.RefType\x12\'\n\x14parentTraceSegmentId\x18\x02 \x01(\x0b\x32\t.UniqueId\x12\x14\n\x0cparentSpanId\x18\x03 \x01(\x05\x12#\n\x1bparentApplicationInstanceId\x18\x04 \x01(\x05\x12\x16\n\x0enetworkAddress\x18\x05 \x01(\t\x12\x18\n\x10networkAddressId\x18\x06 \x01(\x05\x12\"\n\x1a\x65ntryApplicationInstanceId\x18\x07 \x01(\x05\x12\x18\n\x10\x65ntryServiceName\x18\x08 \x01(\t\x12\x16\n\x0e\x65ntryServiceId\x18\t \x01(\x05\x12\x19\n\x11parentServiceName\x18\n \x01(\t\x12\x17\n\x0fparentServiceId\x18\x0b \x01(\x05\"\xd7\x02\n\nSpanObject\x12\x0e\n\x06spanId\x18\x01 \x01(\x05\x12\x14\n\x0cparentSpanId\x18\x02 \x01(\x05\x12\x11\n\tstartTime\x18\x03 \x01(\x03\x12\x0f\n\x07\x65ndTime\x18\x04 \x01(\x03\x12\x17\n\x0foperationNameId\x18\x05 \x01(\x05\x12\x15\n\roperationName\x18\x06 \x01(\t\x12\x0e\n\x06peerId\x18\x07 \x01(\x05\x12\x0c\n\x04peer\x18\x08 \x01(\t\x12\x1b\n\x08spanType\x18\t \x01(\x0e\x32\t.SpanType\x12\x1d\n\tspanLayer\x18\n \x01(\x0e\x32\n.SpanLayer\x12\x13\n\x0b\x63omponentId\x18\x0b \x01(\x05\x12\x11\n\tcomponent\x18\x0c \x01(\t\x12\x0f\n\x07isError\x18\r \x01(\x08\x12!\n\x04tags\x18\x0e \x03(\x0b\x32\x13.KeyWithStringValue\x12\x19\n\x04logs\x18\x0f \x03(\x0b\x32\x0b.LogMessage\"=\n\nLogMessage\x12\x0c\n\x04time\x18\x01 \x01(\x03\x12!\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\x13.KeyWithStringValue*,\n\x07RefType\x12\x10\n\x0c\x43rossProcess\x10\x00\x12\x0f\n\x0b\x43rossThread\x10\x01**\n\x08SpanType\x12\t\n\x05\x45ntry\x10\x00\x12\x08\n\x04\x45xit\x10\x01\x12\t\n\x05Local\x10\x02*J\n\tSpanLayer\x12\x0b\n\x07Unknown\x10\x00\x12\x0c\n\x08\x44\x61tabase\x10\x01\x12\x10\n\x0cRPCFramework\x10\x02\x12\x08\n\x04Http\x10\x03\x12\x06\n\x02MQ\x10\x04\x32\x43\n\x13TraceSegmentService\x12,\n\x07\x63ollect\x12\x10.UpstreamSegment\x1a\x0b.Downstream\"\x00(\x01\x42$\n org.skywalking.apm.network.protoP\x01\x62\x06proto3')
  ,
  dependencies=[Downstream__pb2.DESCRIPTOR,KeyWithStringValue__pb2.DESCRIPTOR,])

_REFTYPE = _descriptor.EnumDescriptor(
  name='RefType',
  full_name='RefType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CrossProcess', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CrossThread', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1101,
  serialized_end=1145,
)
_sym_db.RegisterEnumDescriptor(_REFTYPE)

RefType = enum_type_wrapper.EnumTypeWrapper(_REFTYPE)
_SPANTYPE = _descriptor.EnumDescriptor(
  name='SpanType',
  full_name='SpanType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Entry', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Exit', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Local', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1147,
  serialized_end=1189,
)
_sym_db.RegisterEnumDescriptor(_SPANTYPE)

SpanType = enum_type_wrapper.EnumTypeWrapper(_SPANTYPE)
_SPANLAYER = _descriptor.EnumDescriptor(
  name='SpanLayer',
  full_name='SpanLayer',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Unknown', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Database', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RPCFramework', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Http', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MQ', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1191,
  serialized_end=1265,
)
_sym_db.RegisterEnumDescriptor(_SPANLAYER)

SpanLayer = enum_type_wrapper.EnumTypeWrapper(_SPANLAYER)
CrossProcess = 0
CrossThread = 1
Entry = 0
Exit = 1
Local = 2
Unknown = 0
Database = 1
RPCFramework = 2
Http = 3
MQ = 4



_UPSTREAMSEGMENT = _descriptor.Descriptor(
  name='UpstreamSegment',
  full_name='UpstreamSegment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='globalTraceIds', full_name='UpstreamSegment.globalTraceIds', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='segment', full_name='UpstreamSegment.segment', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=142,
)


_UNIQUEID = _descriptor.Descriptor(
  name='UniqueId',
  full_name='UniqueId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='idParts', full_name='UniqueId.idParts', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=144,
  serialized_end=171,
)


_TRACESEGMENTOBJECT = _descriptor.Descriptor(
  name='TraceSegmentObject',
  full_name='TraceSegmentObject',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='traceSegmentId', full_name='TraceSegmentObject.traceSegmentId', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='refs', full_name='TraceSegmentObject.refs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='spans', full_name='TraceSegmentObject.spans', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='applicationId', full_name='TraceSegmentObject.applicationId', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='applicationInstanceId', full_name='TraceSegmentObject.applicationInstanceId', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=174,
  serialized_end=349,
)


_TRACESEGMENTREFERENCE = _descriptor.Descriptor(
  name='TraceSegmentReference',
  full_name='TraceSegmentReference',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='refType', full_name='TraceSegmentReference.refType', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parentTraceSegmentId', full_name='TraceSegmentReference.parentTraceSegmentId', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parentSpanId', full_name='TraceSegmentReference.parentSpanId', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parentApplicationInstanceId', full_name='TraceSegmentReference.parentApplicationInstanceId', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkAddress', full_name='TraceSegmentReference.networkAddress', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkAddressId', full_name='TraceSegmentReference.networkAddressId', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='entryApplicationInstanceId', full_name='TraceSegmentReference.entryApplicationInstanceId', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='entryServiceName', full_name='TraceSegmentReference.entryServiceName', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='entryServiceId', full_name='TraceSegmentReference.entryServiceId', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parentServiceName', full_name='TraceSegmentReference.parentServiceName', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parentServiceId', full_name='TraceSegmentReference.parentServiceId', index=10,
      number=11, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=352,
  serialized_end=690,
)


_SPANOBJECT = _descriptor.Descriptor(
  name='SpanObject',
  full_name='SpanObject',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='spanId', full_name='SpanObject.spanId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parentSpanId', full_name='SpanObject.parentSpanId', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='startTime', full_name='SpanObject.startTime', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='endTime', full_name='SpanObject.endTime', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='operationNameId', full_name='SpanObject.operationNameId', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='operationName', full_name='SpanObject.operationName', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='peerId', full_name='SpanObject.peerId', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='peer', full_name='SpanObject.peer', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='spanType', full_name='SpanObject.spanType', index=8,
      number=9, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='spanLayer', full_name='SpanObject.spanLayer', index=9,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='componentId', full_name='SpanObject.componentId', index=10,
      number=11, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='component', full_name='SpanObject.component', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isError', full_name='SpanObject.isError', index=12,
      number=13, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tags', full_name='SpanObject.tags', index=13,
      number=14, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='logs', full_name='SpanObject.logs', index=14,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=693,
  serialized_end=1036,
)


_LOGMESSAGE = _descriptor.Descriptor(
  name='LogMessage',
  full_name='LogMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='time', full_name='LogMessage.time', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='LogMessage.data', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1038,
  serialized_end=1099,
)

_UPSTREAMSEGMENT.fields_by_name['globalTraceIds'].message_type = _UNIQUEID
_TRACESEGMENTOBJECT.fields_by_name['traceSegmentId'].message_type = _UNIQUEID
_TRACESEGMENTOBJECT.fields_by_name['refs'].message_type = _TRACESEGMENTREFERENCE
_TRACESEGMENTOBJECT.fields_by_name['spans'].message_type = _SPANOBJECT
_TRACESEGMENTREFERENCE.fields_by_name['refType'].enum_type = _REFTYPE
_TRACESEGMENTREFERENCE.fields_by_name['parentTraceSegmentId'].message_type = _UNIQUEID
_SPANOBJECT.fields_by_name['spanType'].enum_type = _SPANTYPE
_SPANOBJECT.fields_by_name['spanLayer'].enum_type = _SPANLAYER
_SPANOBJECT.fields_by_name['tags'].message_type = KeyWithStringValue__pb2._KEYWITHSTRINGVALUE
_SPANOBJECT.fields_by_name['logs'].message_type = _LOGMESSAGE
_LOGMESSAGE.fields_by_name['data'].message_type = KeyWithStringValue__pb2._KEYWITHSTRINGVALUE
DESCRIPTOR.message_types_by_name['UpstreamSegment'] = _UPSTREAMSEGMENT
DESCRIPTOR.message_types_by_name['UniqueId'] = _UNIQUEID
DESCRIPTOR.message_types_by_name['TraceSegmentObject'] = _TRACESEGMENTOBJECT
DESCRIPTOR.message_types_by_name['TraceSegmentReference'] = _TRACESEGMENTREFERENCE
DESCRIPTOR.message_types_by_name['SpanObject'] = _SPANOBJECT
DESCRIPTOR.message_types_by_name['LogMessage'] = _LOGMESSAGE
DESCRIPTOR.enum_types_by_name['RefType'] = _REFTYPE
DESCRIPTOR.enum_types_by_name['SpanType'] = _SPANTYPE
DESCRIPTOR.enum_types_by_name['SpanLayer'] = _SPANLAYER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

UpstreamSegment = _reflection.GeneratedProtocolMessageType('UpstreamSegment', (_message.Message,), dict(
  DESCRIPTOR = _UPSTREAMSEGMENT,
  __module__ = 'TraceSegmentService_pb2'
  # @@protoc_insertion_point(class_scope:UpstreamSegment)
  ))
_sym_db.RegisterMessage(UpstreamSegment)

UniqueId = _reflection.GeneratedProtocolMessageType('UniqueId', (_message.Message,), dict(
  DESCRIPTOR = _UNIQUEID,
  __module__ = 'TraceSegmentService_pb2'
  # @@protoc_insertion_point(class_scope:UniqueId)
  ))
_sym_db.RegisterMessage(UniqueId)

TraceSegmentObject = _reflection.GeneratedProtocolMessageType('TraceSegmentObject', (_message.Message,), dict(
  DESCRIPTOR = _TRACESEGMENTOBJECT,
  __module__ = 'TraceSegmentService_pb2'
  # @@protoc_insertion_point(class_scope:TraceSegmentObject)
  ))
_sym_db.RegisterMessage(TraceSegmentObject)

TraceSegmentReference = _reflection.GeneratedProtocolMessageType('TraceSegmentReference', (_message.Message,), dict(
  DESCRIPTOR = _TRACESEGMENTREFERENCE,
  __module__ = 'TraceSegmentService_pb2'
  # @@protoc_insertion_point(class_scope:TraceSegmentReference)
  ))
_sym_db.RegisterMessage(TraceSegmentReference)

SpanObject = _reflection.GeneratedProtocolMessageType('SpanObject', (_message.Message,), dict(
  DESCRIPTOR = _SPANOBJECT,
  __module__ = 'TraceSegmentService_pb2'
  # @@protoc_insertion_point(class_scope:SpanObject)
  ))
_sym_db.RegisterMessage(SpanObject)

LogMessage = _reflection.GeneratedProtocolMessageType('LogMessage', (_message.Message,), dict(
  DESCRIPTOR = _LOGMESSAGE,
  __module__ = 'TraceSegmentService_pb2'
  # @@protoc_insertion_point(class_scope:LogMessage)
  ))
_sym_db.RegisterMessage(LogMessage)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n org.skywalking.apm.network.protoP\001'))

_TRACESEGMENTSERVICE = _descriptor.ServiceDescriptor(
  name='TraceSegmentService',
  full_name='TraceSegmentService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1267,
  serialized_end=1334,
  methods=[
  _descriptor.MethodDescriptor(
    name='collect',
    full_name='TraceSegmentService.collect',
    index=0,
    containing_service=None,
    input_type=_UPSTREAMSEGMENT,
    output_type=Downstream__pb2._DOWNSTREAM,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TRACESEGMENTSERVICE)

DESCRIPTOR.services_by_name['TraceSegmentService'] = _TRACESEGMENTSERVICE

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class TraceSegmentServiceStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.collect = channel.stream_unary(
          '/TraceSegmentService/collect',
          request_serializer=UpstreamSegment.SerializeToString,
          response_deserializer=Downstream__pb2.Downstream.FromString,
          )


  class TraceSegmentServiceServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def collect(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_TraceSegmentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'collect': grpc.stream_unary_rpc_method_handler(
            servicer.collect,
            request_deserializer=UpstreamSegment.FromString,
            response_serializer=Downstream__pb2.Downstream.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'TraceSegmentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaTraceSegmentServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def collect(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaTraceSegmentServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def collect(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    collect.future = None


  def beta_create_TraceSegmentService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('TraceSegmentService', 'collect'): UpstreamSegment.FromString,
    }
    response_serializers = {
      ('TraceSegmentService', 'collect'): Downstream__pb2.Downstream.SerializeToString,
    }
    method_implementations = {
      ('TraceSegmentService', 'collect'): face_utilities.stream_unary_inline(servicer.collect),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_TraceSegmentService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('TraceSegmentService', 'collect'): UpstreamSegment.SerializeToString,
    }
    response_deserializers = {
      ('TraceSegmentService', 'collect'): Downstream__pb2.Downstream.FromString,
    }
    cardinalities = {
      'collect': cardinality.Cardinality.STREAM_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'TraceSegmentService', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
